
.grid-bg {
  box-sizing: border-box !important;
  display: table;
  width: 100%;
  height: calc(100vh - var(--mantine-spacing-xl)); /* DONT TOUCH THIS */
  line-height: 1.6;
  position: relative;
  overflow: hidden;
}

/* Landing page wrapper that reuses the animated background lines */
.landing-page-bg {
  position: relative;
  width: 100%;
  height: calc(100vh - var(--app-shell-header-height));
  overflow: hidden;
  box-sizing: border-box;
  background: transparent;
}

.landing-page-header {
  z-index: 40; /* ensure header sits above content for clickability */
  text-align: center;
  pointer-events: auto;
}

.landing-page-header h1 {
  margin: 0;
  font-size: clamp(2rem, 6vw, 4rem);
}

/* Hero specific styles */
.hero-title {
  font-size: clamp(2.75rem, 8vw, 5.75rem);
  margin: 0;
  letter-spacing: -0.035em;
  line-height: 1.02;
  color: light-dark(var(--mantine-color-dark-6), var(--mantine-color-gray-3));
}

/* Emphasized span inside subtitle */
.hero-em {
  font-weight: 700;
  color: light-dark(var(--mantine-color-dark-6), var(--mantine-color-gray-3));
}

.hero-subtitle {
  max-width: 70ch;
  margin: 0 auto;
  text-align: center;
}

.hero-subtagline {
  text-align: center;
  opacity: 0.9;
}

/* translucent panel behind hero text to blur moving background underneath */
.hero-panel {
  display: grid;
  place-items: center;
  padding: var(--mantine-spacing-lg);
  margin: 0 auto;
  border-radius: 10px;
  backdrop-filter: blur(8px) saturate(120%);
  -webkit-backdrop-filter: blur(8px) saturate(120%);
  border: none; /* remove visible border for cleaner look */
  width: min(1100px, 96%);
}

.hero-features {
  list-style: none;
  display: flex;
  gap: 1rem;
  padding: 0;
  margin: 0.5rem 0 0 0;
  justify-content: center;
  flex-wrap: wrap;
}

.hero-features li {
  background: rgba(255,255,255,0.06);
  color: rgba(255,255,255,0.95);
  padding: 0.35rem 0.75rem;
  border-radius: 999px;
  font-weight: 500;
  font-size: 0.95rem;
}

/* Glassy features panel with CLI line beneath */
.hero-cta-glass {
  position: relative;
  padding: 1rem 1.5rem;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,0.08);
  background: rgba(20,20,20,0.35);
  backdrop-filter: saturate(120%) blur(6px);
  -webkit-backdrop-filter: saturate(120%) blur(6px);
  display: grid;
  gap: 0.75rem;
  justify-items: center;
  width: min(720px, 92vw);
}

.hero-glass::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  pointer-events: none;
}

/* Lightweight glass visual for cards/papers â€” only visual styles so grid/layout
   from Dash Mantine Components isn't affected. Use className="card-glass" on
   dmc.Paper elements. */
.card-glass {
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,0.08);
  background: rgba(20,20,20,0.35);
  backdrop-filter: saturate(120%) blur(6px);
  -webkit-backdrop-filter: saturate(120%) blur(6px);
  cursor: pointer;
}



.cli-line {
  color: rgba(255,255,255,0.8);
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 0.85rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  opacity: 0.9;
}

.cli-caret {
  color: #a78bfa; /* violet accent */
  font-weight: 700;
}

.cli-code {
  color: rgba(255,255,255,0.95);
}

.landing-page-content {
  z-index: 20; /* lower than header so header is clickable */
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: auto;
}

.lp-grid-line::after {
  /* Rectangular pixelated block with gradient fill (vertical drop) */
  content: '';
  display: block;
  position: absolute;
  /* rectangle size adjustable via --pixel-width and --pixel-height */
  width: var(--pixel-width, 8px);
  height: var(--pixel-height, 40vh);
  /* start above viewport for drop (height is relative to --pixel-height) */
  top: calc(-1 * var(--pixel-height, 40vh));
  left: 50%;
  transform: translateX(-50%);
  /* repeating squares tiled vertically; --tile-size controls the square size */
  --tile-size: var(--pixel-size, 8px);
  background-image: repeating-linear-gradient(
    to bottom,
    var(--color, #ffffff) 0 var(--tile-size),
    rgba(255,255,255,0) var(--tile-size) calc(var(--tile-size) * 2)
  );
  background-size: 100% calc(var(--tile-size) * 2); /* vertical stack of colored tile + gap */
  background-repeat: repeat;
  /* inverse: bottom -> top (opaque at bottom, fade toward top) */
  -webkit-mask-image: linear-gradient(to top, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 60%);
  mask-image: linear-gradient(to top, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 60%);
  /* glow controls (stronger defaults for more neon) */
  --glow-size: var(--glow-size, 28px);
  --glow-color: var(--glow-color, var(--color, #ffffff));

  /* smooth vertical drop + independent glow pulse animation */
  animation: drop var(--drop-duration, 20s) var(--delay, 0s) infinite linear, glowPulse var(--glow-duration, 2.4s) ease-in-out var(--delay, 0s) infinite;
  /* stronger trailing glow and Tron-like neon bloom */
  box-shadow: 0 6px 0 -4px rgba(0,0,0,0.04), 0 12px 0 -6px rgba(0,0,0,0.03), 0 0 calc(var(--glow-size) / 2) var(--glow-color), 0 0 calc(var(--glow-size)) rgba(255,255,255,0.08);
  filter: drop-shadow(0 0 calc(var(--glow-size) / 1.5) var(--glow-color));
  mix-blend-mode: screen;
  border-radius: var(--line-border-radius, 0px);
}

/* Container that spaces multiple lp-grid-line elements horizontally and keeps them thin */
.lp-grid-lines, .grid-bg {
  --lines-width: 90vw;
}

.lp-grid-lines {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  height: 100%;
  width: var(--lines-width);
  display: flex;
  justify-content: space-between;
  pointer-events: none; /* let clicks pass through if needed */
}

.landing-page-bg .bg-overlay-stack {
  position: absolute;
  inset: 0; /* fill the grid-bg area */
  z-index: 30; /* above header and lines */
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: auto; /* let interactive elements work */
}

/* Ensure each lp-grid-line is a thin vertical column instead of expanding full width */
.lp-grid-line {
  position: relative;
  width: 1px; /* thin line */
  min-width: 1px;
  height: 100%;
  overflow: visible;
}

.lp-grid-line::after {
  /* keep the animated block centered on the 1px column */
  left: 50%;
  margin-left: calc(var(--pixel-size, 8px) / -2);
  will-change: left, top;
  border-radius: var(--line-border-radius, 0px);
}

/* Use per-line CSS variables to control color and delay so order is explicit.
  Set inline style="--i:0; --color: #FF4500;" on each lp-grid-line element from Python. */
.lp-grid-line::after {
  /* color is applied as background-color above; ensure animation name and timing respected */
  animation-name: var(--anim-name, drop);
  animation-duration: var(--drop-duration, 20s);
  animation-delay: var(--delay, 0s);
  animation-iteration-count: infinite;
  /* use steps for pixel feel on vertical drops, fallback to linear for horizontal when overridden */
}

@keyframes drop {
  0% {
    top: calc(-1 * var(--pixel-height, 40vh));
  }
  60% {
    top: 50vh; /* mid-screen stop to create stepped fall */
  }
  100% {
    top: 120vh; /* exit below viewport */
  }
}

@keyframes glowPulse {
  0% {
    opacity: 0.65;
    transform: scale(1);
    filter: drop-shadow(0 0 calc(var(--glow-size) / 3) var(--glow-color));
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
    filter: drop-shadow(0 0 calc(var(--glow-size)) var(--glow-color));
  }
  100% {
    opacity: 0.75;
    transform: scale(1);
    filter: drop-shadow(0 0 calc(var(--glow-size) / 3) var(--glow-color));
  }
}

/* Horizontal travel animations for some lines. These animate the small
   gradient block across the viewport while keeping it at a fixed vertical
   position controlled by the per-line variable `--h-top`. */
@keyframes left-right {
  0% {
    left: -120vw;
    top: var(--h-top, 30%);
  }
  100% {
    left: 120vw;
    top: var(--h-top, 30%);
  }
}

@keyframes right-left {
  0% {
    left: 120vw;
    top: var(--h-top, 70%);
  }
  100% {
    left: -120vw;
    top: var(--h-top, 70%);
  }
}

/* Styling for horizontal-moving lines: display a short horizontal bar that
   travels left-right or right-left across the screen. */
.lp-grid-line.horizontal::after {
  /* Horizontal rectangular gradient block that moves across the screen */
  width: var(--h-width, 8vw); /* default horizontal visual length */
  height: var(--h-height, var(--pixel-width, 8px));
  margin-left: 0;
  top: var(--h-top, 50%);
  left: -120vw; /* start off-canvas */
  transform: translateY(-50%);
  border-radius: var(--line-border-radius, 0px);
  will-change: left, top;
  /* horizontal repeating square tiles along the length of the bar */
  --tile-size: var(--pixel-size, 8px);
  background-image: repeating-linear-gradient(
    to right,
    var(--color, #ffffff) 0 var(--tile-size),
    rgba(255,255,255,0) var(--tile-size) calc(var(--tile-size) * 2)
  );
  background-size: calc(var(--tile-size) * 2) 100%;
  background-repeat: repeat-x;
  /* inverse: right -> left (opaque at right, fade toward left) */
  -webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 80%);
  mask-image: linear-gradient(to left, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 80%);
  /* horizontal travel + glow pulse */
  --glow-size: var(--glow-size, 22px);
  --glow-color: var(--glow-color, var(--color, #ffffff));
  animation: var(--anim-name, left-right) var(--drop-duration, 20s) var(--delay, 0s) infinite linear, glowPulse var(--glow-duration, 2.4s) ease-in-out var(--delay, 0s) infinite;
  /* stronger trailing shadow and neon glow */
  box-shadow: -6px 0 0 -4px rgba(0,0,0,0.04), -12px 0 0 -6px rgba(0,0,0,0.03), 0 0 calc(var(--glow-size) / 2) var(--glow-color), 0 0 calc(var(--glow-size)) rgba(255,255,255,0.08);
  filter: drop-shadow(0 0 calc(var(--glow-size) / 1.5) var(--glow-color));
  mix-blend-mode: screen;
}

/* diagonal variants removed: lines will only use the vertical `drop` animation */
/* Remove per-line diagonal overrides so all lines animate with `drop` only. */

/* Direction-specific masks for horizontal lines.
   Use these by adding the matching class to the lp-grid-line element:
   - add `.anim-left-right` for left->right travel
   - add `.anim-right-left` for right->left travel
   (The Python generator can include the extra class when creating lines.) */
.lp-grid-line.horizontal.anim-left-right::after {
  /* left->right: opaque on left, fade toward right */
  /* inverse helper: make this helper now right->left (opaque right, fade left) */
  -webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 80%);
  mask-image: linear-gradient(to left, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 80%);
    /* ensure animation starts off-canvas on the left for left->right travel */
    left: -120vw;
}

.lp-grid-line.horizontal.anim-right-left::after {
  /* right->left: opaque on right, fade toward left */
  /* inverse helper: make this helper now left->right (opaque left, fade right) */
  -webkit-mask-image: linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 80%);
  mask-image: linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 80%);
    /* ensure animation starts off-canvas on the right for right->left travel */
    left: 120vw;
}

/* .mantine-AppShell-header {
  background: rgba(var(--mantine-color-body),0.5);
  backdrop-filter: saturate(120%) blur(6px);
  -webkit-backdrop-filter: saturate(120%) blur(6px);
} */

.mainHeaderLink {
  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-1));
  font-size: var(--mantine-font-size-xs);
  text-transform: uppercase;
  transition: color 100ms ease;
}

.mainHeaderLink:hover {
  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));
  text-decoration: none;
}

/* Preferred: remove the visual ring for pointer focus but keep it for keyboard users */
.search-input-trigger,
.search-input-trigger input {
  border: none;
  cursor: pointer;
}

/* Hide focus ring when not using keyboard (preserves accessibility) */
.search-input-trigger:focus:not(:focus-visible),
.search-input-trigger input:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
